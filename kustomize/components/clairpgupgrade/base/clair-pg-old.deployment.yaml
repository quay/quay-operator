apiVersion: apps/v1
kind: Deployment
metadata:
  name: clair-postgres-old
  labels:
    quay-component: clair-postgres-old
  annotations:
    quay-component: clair-postgres-old
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      quay-component: clair-postgres-old
  template:
    metadata:
      labels:
        quay-component: clair-postgres-old
    spec:
      terminationGraceperiodSeconds: 600
      serviceAccountName: clair-postgres
      volumes:
        - name: clair-postgres-conf-sample
          configMap:
            name: clair-postgres-conf-sample
        - name: postgres-data
          persistentVolumeClaim:
            claimName: clair-postgres-13
      containers:
        - name: postgres
          image: quay.io/sclorg/postgresql-13-c9s:latest
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRESQL_USER
              value: postgres
            - name: POSTGRESQL_DATABASE
              value: postgres
            - name: POSTGRESQL_PASSWORD
              value: postgres
            - name: POSTGRESQL_ADMIN_PASSWORD
              value: postgres
            - name: POSTGRESQL_SHARED_BUFFERS
              value: 256MB
            - name: POSTGRESQL_MAX_CONNECTIONS
              value: "2000"
          volumeMounts:
            - name: clair-postgres-conf-sample
              mountPath: /usr/share/pgsql/postgresql.conf.sample
              subPath: postgresql.conf.sample
            - name: postgres-data
              mountPath: /var/lib/pgsql/data
          resources:
            requests:
              cpu: 500m
              memory: 2Gi
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "
                  until pg_isready; do
                    echo 'Waiting for PostgreSQL to start...';
                    sleep 2;
                  done;
                  echo 'password_encryption = scram-sha-256' >> $PGDATA/postgresql.conf;
                  echo 'host all all 0.0.0.0/0 scram-sha-256' >> $PGDATA/pg_hba.conf;
                  pg_ctl reload;
                  psql -c \"ALTER SYSTEM SET password_encryption TO 'scram-sha-256';\";
                  psql -c \"SELECT pg_reload_conf();\";
                  psql -c \"ALTER USER $POSTGRESQL_USER WITH PASSWORD '$POSTGRESQL_PASSWORD';\"
                "]