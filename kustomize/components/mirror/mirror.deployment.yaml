apiVersion: apps/v1
kind: Deployment
metadata:
  name: quay-mirror
  labels:
    quay-component: quay-mirror
  annotations:
    quay-component: mirror
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      quay-component: quay-mirror
  template:
    metadata:
      labels:
        quay-component: quay-mirror
    spec:
      serviceAccountName: quay-app
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: quay-component
                  operator: In
                  values:
                  - quay-mirror
              topologyKey: "kubernetes.io/hostname"
      volumes:
        - name: config
          projected:
            sources:
              - secret:
                  name: quay-config-secret
              - secret:
                  name: quay-config-tls
        - name: extra-ca-certs
          projected:
            sources:
              - configMap:
                  name: cluster-service-ca
              - configMap:
                  name: cluster-trusted-ca
              - secret:
                  name: extra-ca-certs      
              - secret:
                  name: quay-config-tls
        - name: postgres-certs
          projected:
            sources:
            - secret:
                name: postgresql-ca
                optional: true
            - secret:
                name: postgresql-client-certs
                optional: true
        - name: postgres-certs-store
          emptyDir:
            sizeLimit: 5Mi
      initContainers:
        - name: quay-mirror-init
          image: quay.io/projectquay/quay:latest
          command:
          - sh
          - -c
          - python -c "import os, requests, sys; host = os.getenv(\"QUAY_APP_SERVICE_HOST\"); sys.exit(0) if requests.get(\"http://\"+host, verify=False, allow_redirects=False) else sys.exit(1);"
          env:
            - name: QUAY_APP_SERVICE_HOST
              value: $(QUAY_APP_SERVICE_HOST)
      containers:
        - name: quay-mirror
          image: quay.io/projectquay/quay:latest
          command: ["/quay-registry/quay-entrypoint.sh"]
          args: ["repomirror-nomigrate"]
          env:
            - name: QE_K8S_CONFIG_SECRET
              # FIXME: Using `vars` is kinda ugly because it's basically templating, but this needs to be the generated `Secret` name...
              value: $(QE_K8S_CONFIG_SECRET)
            - name: QE_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: DEBUGLOG
              value: "false"
            - name: ENSURE_NO_MIGRATION
              value: "true"
            - name: HTTP_PROXY
              valueFrom:
                secretKeyRef:
                  name: quay-proxy-config
                  key: HTTP_PROXY
            - name: HTTPS_PROXY
              valueFrom:
                secretKeyRef:
                  name: quay-proxy-config
                  key: HTTPS_PROXY
            - name: NO_PROXY
              valueFrom:
                secretKeyRef:
                  name: quay-proxy-config
                  key: NO_PROXY
          # TODO: Determine if we need to set resource requirements
          volumeMounts:
            - name: config
              readOnly: false
              mountPath: /conf/stack
            - name: extra-ca-certs
              readOnly: true
              mountPath: /conf/stack/extra_ca_certs
            - name: postgres-certs
              mountPath: /run/secrets/postgresql
            - name: postgres-certs-store
              mountPath: /.postgresql
          resources:
            requests:
              cpu: 500m
              memory: 512Mi
            limits:
              cpu: 1000m
              memory: 2Gi
