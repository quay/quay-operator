// Code generated by "stringer -type Mode,LogLevel -linecomment -output enums_string.go"; DO NOT EDIT.

package config

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ComboMode-0]
	_ = x[IndexerMode-1]
	_ = x[MatcherMode-2]
	_ = x[NotifierMode-3]
}

const _Mode_name = "comboindexermatchernotifier"

var _Mode_index = [...]uint8{0, 5, 12, 19, 27}

func (i Mode) String() string {
	if i < 0 || i >= Mode(len(_Mode_index)-1) {
		return "Mode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Mode_name[_Mode_index[i]:_Mode_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InfoLog-0]
	_ = x[DebugColorLog-1]
	_ = x[DebugLog-2]
	_ = x[WarnLog-3]
	_ = x[ErrorLog-4]
	_ = x[FatalLog-5]
	_ = x[PanicLog-6]
}

const _LogLevel_name = "infodebug-colordebugwarnerrorfatalpanic"

var _LogLevel_index = [...]uint8{0, 4, 15, 20, 24, 29, 34, 39}

func (i LogLevel) String() string {
	if i < 0 || i >= LogLevel(len(_LogLevel_index)-1) {
		return "LogLevel(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _LogLevel_name[_LogLevel_index[i]:_LogLevel_index[i+1]]
}
